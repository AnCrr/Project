export default {
    clearMocks: true,
    testEnvironment: 'jsdom',
    coveragePathIgnorePatterns: ['/node_modules/'],
    moduleDirectories: ['node_modules'],
    moduleFileExtensions: [
        'js',
        'mjs',
        'cjs',
        'jsx',
        'ts',
        'tsx',
        'json',
        'node',
    ],
    rootDir: '../../',
    testMatch: ['<rootDir>src/**/*(*.)@(spec|test).[tj]s?(x)'],
    // automock: false,
    // bail: 0,
    // cacheDirectory: "/private/var/folders/y8/pfvq4kr51g1bjdbsyjysx7800000gn/T/jest_dx",
    // collectCoverage: false,
    // collectCoverageFrom: undefined,
    // coverageDirectory: undefined,
    // coverageProvider: "babel",
    // coverageReporters: [
    //   "json",
    //   "text",
    //   "lcov",
    //   "clover"
    // ],
    // coverageThreshold: undefined,
    // dependencyExtractor: undefined,
    // errorOnDeprecated: false,
    // fakeTimers: {
    //   "enableGlobally": false
    // },
    // forceCoverageMatch: [],
    // globalSetup: undefined,
    // globalTeardown: undefined,
    // globals: {},
    // maxWorkers: "50%",
    // moduleNameMapper: {},
    // modulePathIgnorePatterns: [],
    // notify: false,
    // notifyMode: "failure-change",
    // preset: undefined,
    // projects: undefined,
    // reporters: undefined,
    // resetMocks: false,
    // resetModules: false,
    // resolver: undefined,
    // restoreMocks: false,
    // roots: [
    //   "<rootDir>"
    // ],
    // runner: "jest-runner",
    // setupFiles: [],
    // setupFilesAfterEnv: [],
    // slowTestThreshold: 5,
    // snapshotSerializers: [],
    // testEnvironmentOptions: {},
    // testLocationInResults: false,
    // testPathIgnorePatterns: [
    //   "/node_modules/"
    // ],
    // testRegex: [],
    // testResultsProcessor: undefined,
    // testRunner: "jest-circus/runner",
    // transform: undefined,
    // transformIgnorePatterns: [
    //   "/node_modules/",
    //   "\\.pnp\\.[^\\/]+$"
    // ],
    // unmockedModulePathPatterns: undefined,
    // verbose: undefined,
    // watchPathIgnorePatterns: [],
    // watchman: true,
};
